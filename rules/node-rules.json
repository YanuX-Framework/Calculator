[{"name":"Rule compute device type lists if local device is present","condition":"function (R) {\r\n            R.when(this.proxemics[this.localDeviceUuid]);\r\n        }","consequence":"function (R) {\r\n            this.viewAndControlDevices = this.modules._.pickBy(this.proxemics, (caps, deviceUuid) => {\r\n                return caps.view === true && caps.control === true && this.modules._.some(this.activeInstances, instance => deviceUuid === instance.device.deviceUuid);\r\n            });\r\n            this.viewOnlyDevices = this.modules._.pickBy(this.proxemics, (caps, deviceUuid) => {\r\n                return caps.view === true && caps.control === false && this.modules._.some(this.activeInstances, instance => deviceUuid === instance.device.deviceUuid);\r\n            });\r\n            this.controlOnlyDevices = this.modules._.pickBy(this.proxemics, (caps, deviceUuid) => {\r\n                return caps.view === false && caps.control === true && this.modules._.some(this.activeInstances, instance => deviceUuid === instance.device.deviceUuid);\r\n            });\r\n            R.next();\r\n        }","on":true},{"name":"end when local device is present","condition":"function (R) {\r\n            R.when(this.proxemics[this.localDeviceUuid]);\r\n        }","consequence":"function (R) {\r\n            this.componentsConfig = this.componentsDistribution[this.localDeviceUuid];\r\n            R.next();\r\n        }","on":true},{"name":"end when local device is not present","condition":"function (R) {\r\n            R.when(!this.proxemics[this.localDeviceUuid]);\r\n        }","consequence":"function (R) {\r\n            this.componentsConfig = this.defaultComponentsConfig;\r\n            R.stop();\r\n        }","on":true},{"name":"dedicated view devices have priority","condition":"function (R) {\r\n            R.when(!this.modules._.isEmpty(this.viewOnlyDevices));\r\n        }","consequence":"function (R) {\r\n            for (let deviceUuid in this.viewAndControlDevices) {\r\n                this.componentsDistribution[deviceUuid].view = false;\r\n            }\r\n            R.next();\r\n        }","on":true},{"name":"dedicated control devices have priority","condition":"function (R) {\r\n            R.when(!this.modules._.isEmpty(this.controlOnlyDevices));\r\n        }","consequence":"function (R) {\r\n            for (let deviceUuid in this.viewAndControlDevices) {\r\n                this.componentsDistribution[deviceUuid].control = false;\r\n            }\r\n            R.next();\r\n        }","on":true}]